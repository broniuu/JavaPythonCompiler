// Generated from java-escape by ANTLR 4.11.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class gLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, FUNCTION_NAME=7, INT_TYPE=8, 
		CHAR_TYPE=9, STRING_TYPE=10, DOUBLE_TYPE=11, FLOAT_TYPE=12, BOOL_TYPE=13, 
		ID=14, NUMBER=15, CHAR=16, DOBULE=17, STRING=18, P_STRING=19, BOOL=20, 
		WS=21;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "FUNCTION_NAME", "INT_TYPE", 
			"CHAR_TYPE", "STRING_TYPE", "DOUBLE_TYPE", "FLOAT_TYPE", "BOOL_TYPE", 
			"ID", "NUMBER", "CHAR", "DOBULE", "STRING", "P_STRING", "BOOL", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "'('", "')'", "'()'", "','", "'='", null, "'int'", "'char'", 
			"'String'", "'double'", "'float'", "'boolean'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, "FUNCTION_NAME", "INT_TYPE", 
			"CHAR_TYPE", "STRING_TYPE", "DOUBLE_TYPE", "FLOAT_TYPE", "BOOL_TYPE", 
			"ID", "NUMBER", "CHAR", "DOBULE", "STRING", "P_STRING", "BOOL", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public gLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "g.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0015\u00db\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0003\u0006d\b\u0006\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0005\r\u008d\b\r\n\r\f\r\u0090"+
		"\t\r\u0001\u000e\u0001\u000e\u0003\u000e\u0094\b\u000e\u0001\u000e\u0001"+
		"\u000e\u0005\u000e\u0098\b\u000e\n\u000e\f\u000e\u009b\t\u000e\u0003\u000e"+
		"\u009d\b\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010"+
		"\u0003\u0010\u00a4\b\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0005\u0010"+
		"\u00a9\b\u0010\n\u0010\f\u0010\u00ac\t\u0010\u0003\u0010\u00ae\b\u0010"+
		"\u0001\u0010\u0001\u0010\u0004\u0010\u00b2\b\u0010\u000b\u0010\f\u0010"+
		"\u00b3\u0003\u0010\u00b6\b\u0010\u0001\u0011\u0001\u0011\u0005\u0011\u00ba"+
		"\b\u0011\n\u0011\f\u0011\u00bd\t\u0011\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0005\u0012\u00c3\b\u0012\n\u0012\f\u0012\u00c6\t\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0003\u0013\u00d3"+
		"\b\u0013\u0001\u0014\u0004\u0014\u00d6\b\u0014\u000b\u0014\f\u0014\u00d7"+
		"\u0001\u0014\u0001\u0014\u0000\u0000\u0015\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015\u0001\u0000\u0006\u0002\u0000AZaz\u0004"+
		"\u000009AZ__az\u0001\u000019\u0001\u000009\u0002\u0000\"\"\'\'\u0003\u0000"+
		"\t\n\r\r  \u00ee\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0001+\u0001\u0000\u0000\u0000\u0003-\u0001\u0000\u0000"+
		"\u0000\u0005/\u0001\u0000\u0000\u0000\u00071\u0001\u0000\u0000\u0000\t"+
		"4\u0001\u0000\u0000\u0000\u000b6\u0001\u0000\u0000\u0000\rc\u0001\u0000"+
		"\u0000\u0000\u000fe\u0001\u0000\u0000\u0000\u0011i\u0001\u0000\u0000\u0000"+
		"\u0013n\u0001\u0000\u0000\u0000\u0015u\u0001\u0000\u0000\u0000\u0017|"+
		"\u0001\u0000\u0000\u0000\u0019\u0082\u0001\u0000\u0000\u0000\u001b\u008a"+
		"\u0001\u0000\u0000\u0000\u001d\u009c\u0001\u0000\u0000\u0000\u001f\u009e"+
		"\u0001\u0000\u0000\u0000!\u00a3\u0001\u0000\u0000\u0000#\u00b7\u0001\u0000"+
		"\u0000\u0000%\u00c0\u0001\u0000\u0000\u0000\'\u00d2\u0001\u0000\u0000"+
		"\u0000)\u00d5\u0001\u0000\u0000\u0000+,\u0005;\u0000\u0000,\u0002\u0001"+
		"\u0000\u0000\u0000-.\u0005(\u0000\u0000.\u0004\u0001\u0000\u0000\u0000"+
		"/0\u0005)\u0000\u00000\u0006\u0001\u0000\u0000\u000012\u0005(\u0000\u0000"+
		"23\u0005)\u0000\u00003\b\u0001\u0000\u0000\u000045\u0005,\u0000\u0000"+
		"5\n\u0001\u0000\u0000\u000067\u0005=\u0000\u00007\f\u0001\u0000\u0000"+
		"\u000089\u0005S\u0000\u00009:\u0005e\u0000\u0000:d\u0005q\u0000\u0000"+
		";<\u0005C\u0000\u0000<=\u0005o\u0000\u0000=>\u0005n\u0000\u0000>d\u0005"+
		"d\u0000\u0000?@\u0005B\u0000\u0000@A\u0005r\u0000\u0000AB\u0005a\u0000"+
		"\u0000BC\u0005n\u0000\u0000CD\u0005c\u0000\u0000DE\u0005h\u0000\u0000"+
		"EF\u0005R\u0000\u0000Fd\u0005e\u0000\u0000GH\u0005B\u0000\u0000HI\u0005"+
		"r\u0000\u0000IJ\u0005a\u0000\u0000JK\u0005n\u0000\u0000KL\u0005c\u0000"+
		"\u0000Ld\u0005h\u0000\u0000MN\u0005C\u0000\u0000NO\u0005o\u0000\u0000"+
		"OP\u0005n\u0000\u0000PQ\u0005c\u0000\u0000QR\u0005u\u0000\u0000RS\u0005"+
		"r\u0000\u0000ST\u0005R\u0000\u0000Td\u0005e\u0000\u0000UV\u0005C\u0000"+
		"\u0000VW\u0005o\u0000\u0000WX\u0005n\u0000\u0000XY\u0005c\u0000\u0000"+
		"YZ\u0005u\u0000\u0000Zd\u0005r\u0000\u0000[\\\u0005P\u0000\u0000\\]\u0005"+
		"a\u0000\u0000]^\u0005r\u0000\u0000^d\u0005a\u0000\u0000_`\u0005L\u0000"+
		"\u0000`a\u0005o\u0000\u0000ab\u0005o\u0000\u0000bd\u0005p\u0000\u0000"+
		"c8\u0001\u0000\u0000\u0000c;\u0001\u0000\u0000\u0000c?\u0001\u0000\u0000"+
		"\u0000cG\u0001\u0000\u0000\u0000cM\u0001\u0000\u0000\u0000cU\u0001\u0000"+
		"\u0000\u0000c[\u0001\u0000\u0000\u0000c_\u0001\u0000\u0000\u0000d\u000e"+
		"\u0001\u0000\u0000\u0000ef\u0005i\u0000\u0000fg\u0005n\u0000\u0000gh\u0005"+
		"t\u0000\u0000h\u0010\u0001\u0000\u0000\u0000ij\u0005c\u0000\u0000jk\u0005"+
		"h\u0000\u0000kl\u0005a\u0000\u0000lm\u0005r\u0000\u0000m\u0012\u0001\u0000"+
		"\u0000\u0000no\u0005S\u0000\u0000op\u0005t\u0000\u0000pq\u0005r\u0000"+
		"\u0000qr\u0005i\u0000\u0000rs\u0005n\u0000\u0000st\u0005g\u0000\u0000"+
		"t\u0014\u0001\u0000\u0000\u0000uv\u0005d\u0000\u0000vw\u0005o\u0000\u0000"+
		"wx\u0005u\u0000\u0000xy\u0005b\u0000\u0000yz\u0005l\u0000\u0000z{\u0005"+
		"e\u0000\u0000{\u0016\u0001\u0000\u0000\u0000|}\u0005f\u0000\u0000}~\u0005"+
		"l\u0000\u0000~\u007f\u0005o\u0000\u0000\u007f\u0080\u0005a\u0000\u0000"+
		"\u0080\u0081\u0005t\u0000\u0000\u0081\u0018\u0001\u0000\u0000\u0000\u0082"+
		"\u0083\u0005b\u0000\u0000\u0083\u0084\u0005o\u0000\u0000\u0084\u0085\u0005"+
		"o\u0000\u0000\u0085\u0086\u0005l\u0000\u0000\u0086\u0087\u0005e\u0000"+
		"\u0000\u0087\u0088\u0005a\u0000\u0000\u0088\u0089\u0005n\u0000\u0000\u0089"+
		"\u001a\u0001\u0000\u0000\u0000\u008a\u008e\u0007\u0000\u0000\u0000\u008b"+
		"\u008d\u0007\u0001\u0000\u0000\u008c\u008b\u0001\u0000\u0000\u0000\u008d"+
		"\u0090\u0001\u0000\u0000\u0000\u008e\u008c\u0001\u0000\u0000\u0000\u008e"+
		"\u008f\u0001\u0000\u0000\u0000\u008f\u001c\u0001\u0000\u0000\u0000\u0090"+
		"\u008e\u0001\u0000\u0000\u0000\u0091\u009d\u00050\u0000\u0000\u0092\u0094"+
		"\u0005-\u0000\u0000\u0093\u0092\u0001\u0000\u0000\u0000\u0093\u0094\u0001"+
		"\u0000\u0000\u0000\u0094\u0095\u0001\u0000\u0000\u0000\u0095\u0099\u0007"+
		"\u0002\u0000\u0000\u0096\u0098\u0007\u0003\u0000\u0000\u0097\u0096\u0001"+
		"\u0000\u0000\u0000\u0098\u009b\u0001\u0000\u0000\u0000\u0099\u0097\u0001"+
		"\u0000\u0000\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u009a\u009d\u0001"+
		"\u0000\u0000\u0000\u009b\u0099\u0001\u0000\u0000\u0000\u009c\u0091\u0001"+
		"\u0000\u0000\u0000\u009c\u0093\u0001\u0000\u0000\u0000\u009d\u001e\u0001"+
		"\u0000\u0000\u0000\u009e\u009f\u0005\'\u0000\u0000\u009f\u00a0\t\u0000"+
		"\u0000\u0000\u00a0\u00a1\u0005\'\u0000\u0000\u00a1 \u0001\u0000\u0000"+
		"\u0000\u00a2\u00a4\u0005-\u0000\u0000\u00a3\u00a2\u0001\u0000\u0000\u0000"+
		"\u00a3\u00a4\u0001\u0000\u0000\u0000\u00a4\u00ad\u0001\u0000\u0000\u0000"+
		"\u00a5\u00ae\u00050\u0000\u0000\u00a6\u00aa\u0007\u0002\u0000\u0000\u00a7"+
		"\u00a9\u0007\u0003\u0000\u0000\u00a8\u00a7\u0001\u0000\u0000\u0000\u00a9"+
		"\u00ac\u0001\u0000\u0000\u0000\u00aa\u00a8\u0001\u0000\u0000\u0000\u00aa"+
		"\u00ab\u0001\u0000\u0000\u0000\u00ab\u00ae\u0001\u0000\u0000\u0000\u00ac"+
		"\u00aa\u0001\u0000\u0000\u0000\u00ad\u00a5\u0001\u0000\u0000\u0000\u00ad"+
		"\u00a6\u0001\u0000\u0000\u0000\u00ae\u00b5\u0001\u0000\u0000\u0000\u00af"+
		"\u00b1\u0005.\u0000\u0000\u00b0\u00b2\u0007\u0003\u0000\u0000\u00b1\u00b0"+
		"\u0001\u0000\u0000\u0000\u00b2\u00b3\u0001\u0000\u0000\u0000\u00b3\u00b1"+
		"\u0001\u0000\u0000\u0000\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b4\u00b6"+
		"\u0001\u0000\u0000\u0000\u00b5\u00af\u0001\u0000\u0000\u0000\u00b5\u00b6"+
		"\u0001\u0000\u0000\u0000\u00b6\"\u0001\u0000\u0000\u0000\u00b7\u00bb\u0005"+
		"\"\u0000\u0000\u00b8\u00ba\t\u0000\u0000\u0000\u00b9\u00b8\u0001\u0000"+
		"\u0000\u0000\u00ba\u00bd\u0001\u0000\u0000\u0000\u00bb\u00b9\u0001\u0000"+
		"\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc\u00be\u0001\u0000"+
		"\u0000\u0000\u00bd\u00bb\u0001\u0000\u0000\u0000\u00be\u00bf\u0005\"\u0000"+
		"\u0000\u00bf$\u0001\u0000\u0000\u0000\u00c0\u00c4\u0007\u0004\u0000\u0000"+
		"\u00c1\u00c3\t\u0000\u0000\u0000\u00c2\u00c1\u0001\u0000\u0000\u0000\u00c3"+
		"\u00c6\u0001\u0000\u0000\u0000\u00c4\u00c2\u0001\u0000\u0000\u0000\u00c4"+
		"\u00c5\u0001\u0000\u0000\u0000\u00c5\u00c7\u0001\u0000\u0000\u0000\u00c6"+
		"\u00c4\u0001\u0000\u0000\u0000\u00c7\u00c8\u0007\u0004\u0000\u0000\u00c8"+
		"&\u0001\u0000\u0000\u0000\u00c9\u00ca\u0005t\u0000\u0000\u00ca\u00cb\u0005"+
		"r\u0000\u0000\u00cb\u00cc\u0005u\u0000\u0000\u00cc\u00d3\u0005e\u0000"+
		"\u0000\u00cd\u00ce\u0005f\u0000\u0000\u00ce\u00cf\u0005a\u0000\u0000\u00cf"+
		"\u00d0\u0005l\u0000\u0000\u00d0\u00d1\u0005s\u0000\u0000\u00d1\u00d3\u0005"+
		"e\u0000\u0000\u00d2\u00c9\u0001\u0000\u0000\u0000\u00d2\u00cd\u0001\u0000"+
		"\u0000\u0000\u00d3(\u0001\u0000\u0000\u0000\u00d4\u00d6\u0007\u0005\u0000"+
		"\u0000\u00d5\u00d4\u0001\u0000\u0000\u0000\u00d6\u00d7\u0001\u0000\u0000"+
		"\u0000\u00d7\u00d5\u0001\u0000\u0000\u0000\u00d7\u00d8\u0001\u0000\u0000"+
		"\u0000\u00d8\u00d9\u0001\u0000\u0000\u0000\u00d9\u00da\u0006\u0014\u0000"+
		"\u0000\u00da*\u0001\u0000\u0000\u0000\u000f\u0000c\u008e\u0093\u0099\u009c"+
		"\u00a3\u00aa\u00ad\u00b3\u00b5\u00bb\u00c4\u00d2\u00d7\u0001\u0006\u0000"+
		"\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}